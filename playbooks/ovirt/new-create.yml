---

# ansible-playbook -i inventory/filename playbook/ovirt/create-vm.yml --limit="hostname"

- hosts: all
  gather_facts: false
  pre_tasks:
    - name: AUTH | ovirt-auth
      ovirt_auth:
        username: "{{ ovirt_username }}"
        password: "{{ ovirt_password }}"
        url: "{{ ovirt_url }}"
        insecure: true
      run_once: true
      delegate_to: localhost
  tasks:
    - name: create vm
      ovirt_vm:
        wait: true
        timeout: 2400
        auth: "{{ ovirt_auth }}"
        name: "{{ inventory_hostname }}"
        description: "{{ vm_description | default('') }}"
        template: "{{ ovirt_vm_template }}"
        operating_system: "{{ vm_os }}"
        cluster: "Default"
        cpu_cores: "{{ cpu_core }}"
        cpu_sockets: "{{ cpu_socket }}"
        memory: "{{ max_mem }}GiB"
        memory_guaranteed: "{{ min_mem }}GiB"
        high_availability: false
        state: present
        storage_domain: "{{ ovirt_storage_domain }}"
        clone: true
        disk_format: raw
        cloud_init:
          dns_servers: "{{ dns_servers }}"
          dns_search: "{{ dns_search }}"
          nic_boot_protocol: "{{ boot_protocol }}"
          nic_ip_address: "{{ ipv4_addr }}"
          nic_netmask: "{{ ipv4_netmask }}"
          nic_gateway: "{{ ipv4_def_route }}"
          nic_name: "{{ nic_name }}"
          host_name: "{{ inventory_hostname }}"
          regenerate_ssh_keys: true
          authorized_ssh_keys: "{{ ansible_ssh_key }}"
          root_password: "{{ root_user_password }}"
          user_name: "root"
      delegate_to: localhost
      register: created_vm
    
    - name: Ensure VM is stopped
      ovirt_vm:
        timeout: 2400
        auth: "{{ ovirt_auth }}"
        name: "{{ inventory_hostname }}"
        state: stopped
      delegate_to: localhost
    
    - name: save cloud-init
      ovirt_vm:
        timeout: 2400
        auth: "{{ ovirt_auth }}"
        name: "{{ inventory_hostname }}"
        cloud_init_persist: true
        cloud_init:
          dns_servers: "{{ dns_servers }}"
          dns_search: "{{ dns_search }}"
          nic_boot_protocol: "{{ boot_protocol }}"
          nic_ip_address: "{{ ipv4_addr }}"
          nic_netmask: "{{ ipv4_netmask }}"
          nic_gateway: "{{ ipv4_def_route }}"
          nic_name: "{{ nic_name }}"
          host_name: "{{ inventory_hostname }}"
          regenerate_ssh_keys: true
          authorized_ssh_keys: "{{ ansible_ssh_key }}"
          root_password: "{{ root_user_password }}"
          user_name: "root"
      delegate_to: localhost
    
    - name: add storage disk
      ovirt_disk:
        timeout: 2400
        name: "{{ inventory_hostname }}-data"
        activate: true
        format: raw
        size: "{{ data_disk_size }}GiB"
        auth: "{{ ovirt_auth }}"
        storage_domain: "{{ ovirt_storage_domain }}"
        interface: virtio_scsi
        vm_name: "{{ inventory_hostname }}"
      delegate_to: localhost
      when: data_disk is defined
      register: add_disk
    
    - name: update settings
      ovirt_vm:
        timeout: 2400
        auth: "{{ ovirt_auth }}"
        name: "{{ inventory_hostname }}"
        boot_devices: [ 'hd' ]
        boot_menu: false
        usb_support: false
      delegate_to: localhost
    
    - name: start vm
      ovirt_vm:
        timeout: 2400
        auth: "{{ ovirt_auth }}"
        name: "{{ inventory_hostname }}"
        state: running
      delegate_to: localhost
    
    - name: package update
      dnf:
        name: "*"
        state: latest
  post_tasks:
    - name: AUTH | ovirt-auth
      ovirt_auth:
        state: absent
        ovirt_auth: "{{ ovirt_auth }}"
        insecure: true
      run_once: true
      delegate_to: localhost
  collections:
    - ovirt.ovirt
